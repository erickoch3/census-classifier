name: Python Package using Conda

on: [push]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v4
    - name: Setup Conda
      uses: ./.github/actions/setup-conda
      with:
        python-version: '3.10'
        environment-file: 'environment.yaml'
    - name: Lint with flake8
      run: |
        conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v4
    - name: Setup Conda
      uses: ./.github/actions/setup-conda
      with:
        python-version: '3.10'
        environment-file: 'environment.yaml'
    - name: Test with pytest
      run: |
        source $CONDA/bin/activate census-classifier
        conda install pytest
        pytest

  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup Conda
        uses: ./.github/actions/setup-conda
        with:
          python-version: '3.10'
          environment-file: 'environment.yaml'
      - name: Zip the application
        run: |
          zip -r census-classifier.zip .

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: census-classifier
          environment_name: ${{ secrets.EB_ENV_NAME }}
          version_label: ${{ github.sha }}
          region: ${{ secrets.AWS_REGION }}
          existing_bucket_name: ${{ secrets.S3_BUCKET }}
          deployment_package: census-classifier.zip
          wait_for_deployment: true

  smoke-test:
    name: Smoke Test
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Wait for the application to be ready
        run: sleep 60  # Wait for 60 seconds to ensure the application is up and running

      - name: Perform smoke test
        run: |
          ENDPOINT=${{ secrets.ELASTIC_BEANSTALK_ENDPOINT }}
          
          # Test root endpoint
          RESPONSE=$(curl --write-out "%{http_code}" --silent --output /dev/null $ENDPOINT)
          if [ $RESPONSE -ne 200 ]; then
            echo "Root endpoint test failed with response code $RESPONSE"
            exit 1
          else
            echo "Root endpoint test passed with response code $RESPONSE"
          fi

          # Test /predict endpoint
          PREDICT_RESPONSE=$(curl -X POST $ENDPOINT/predict -H "Content-Type: application/json" -d '{
            "age": 25,
            "workclass": "Private",
            "fnlgt": 77516,
            "education": "Bachelors",
            "education-num": 13,
            "marital-status": "Never-married",
            "occupation": "Adm-clerical",
            "relationship": "Not-in-family",
            "race": "White",
            "sex": "Male",
            "capital-gain": 2174,
            "capital-loss": 0,
            "hours-per-week": 40,
            "native-country": "United-States"
          }')
          echo "Predict response: $PREDICT_RESPONSE"
          if [[ $PREDICT_RESPONSE != *"prediction"* ]]; then
            echo "Predict endpoint test failed"
            exit 1
          else
            echo "Predict endpoint test passed"
          fi